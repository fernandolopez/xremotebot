#!/usr/bin/env python2
# -*- coding: utf-8 -*-
'''Setups bluetooth device files for Myro Scribbler robots, starts camera
streaming server and starts web server for the app'''

from os.path import exists, join, dirname, realpath
import os
import time
import xremotebot.configuration as conf
from util import run, runbg
import uuid

# Get directory of the script and chdir to it in order to run
# some scripts.
PWD = realpath(dirname(__file__))
os.chdir(PWD)

# Virtual env path
venvpy = join(PWD, '.venv', 'bin', 'python')
# venvpy = "python"


def kill_old_daemons():
    '''Kills old instances of used processes'''
    for pidfile in ('node.pid', 'avconv.pid'):
        if exists(pidfile):
            with open(pidfile) as f:
                try:
                    os.kill(int(f.read()), 9)
                except OSError:
                    pass
            os.unlink(pidfile)

kill_old_daemons()

# Create SQLite DB if it doensn't exist
if not exists('test.db'):
    print('Creando la base de datos')
    run(venvpy, 'deploy_db.py', stdout=None, stderr=None)


if len(conf.robots.get('scribbler', [])) > 0:
    # If Myro Scribbler robots are present on the configuration
    # setup the bluetooth connections needed
    print('Creando dispositivos rfcomm para los robots scribbler')
    while True:
        print('Se requiere la contrase√±a de root para continuar')
        status, _, _ = run(
            'su', '-c', ' '.join((venvpy, 'reconnect_myro.py')),
            stdout=None, stderr=None)
        if status == 0:
            break

if not conf.disable_streaming and not conf.use_embed_streaming:
    # Unless streaming is disabled or an embed streaming iframe (as youtube)
    # is used, start ffserver to stream a video showing the robots.
    print('Iniciando streaming de video')
    node = runbg('ffserver', '-f','ffserver.conf')
    with open('node.pid', 'w') as f:
        f.write(str(node.pid))

    print('Esperando a que el servicio de streaming arranque')
    time.sleep(2)
    avconv = runbg('ffmpeg', '-f', 'video4linux2', '-r', conf.framerate, '-s', conf.resolution, '-i', 
                   conf.camera_device, 'http://localhost:1234/feed1.ffm' ,'-v', 'quiet')

    with open('avconv.pid', 'w') as f:
        f.write(str(avconv.pid))

# Run the server
try:
    run(venvpy, 'app.py', stdout=None, stderr=None)
except KeyboardInterrupt:
    pass
finally:
    kill_old_daemons()

